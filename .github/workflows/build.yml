name: "Build and push"

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  INFRA_REPO: https://github.com/feelingover/sphene-infra.git

on:
  push:
    branches: ['main']

jobs:
  build:
    name: "Build and push"
    runs-on: ubuntu-latest

    permissions:
        contents: read
        packages: write
        attestations: write
        id-token: write

    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=raw,value=build-${{ github.run_number }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          platforms: linux/arm64,linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
      - name: Extract image tag
        id: extract-tag
        run: |
          echo "IMAGE_TAG=build-${{ github.run_number }}" >> $GITHUB_OUTPUT
          
      - name: Checkout infrastructure repository
        uses: actions/checkout@v4
        with:
          repository: feelingover/sphene-infra
          path: infra
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Update deployment.yaml with new image tag
        run: |
          cd infra
          IMAGE_TAG=${{ steps.extract-tag.outputs.IMAGE_TAG }}
          DEPLOYMENT_FILE="environments/prod/deployment.yaml"
          
          # Replace the image tag in deployment.yaml
          sed -i -e "s|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:.*|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG}|g" $DEPLOYMENT_FILE
          
          # Check if there are changes
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "Changes detected, creating PR"
            
            # Setup git credentials
            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"
            
            # Create a new branch
            NEW_BRANCH="update-image-tag-${IMAGE_TAG}"
            git checkout -b $NEW_BRANCH
            
            # Commit and push changes
            git add $DEPLOYMENT_FILE
            git commit -m "Update image tag to ${IMAGE_TAG}"
            git push -u origin $NEW_BRANCH
            
            # Create PR
            gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"
            gh pr create \
              --repo ${{ env.INFRA_REPO }} \
              --title "Update image tag to ${IMAGE_TAG}" \
              --body "Automated PR to update deployment with the latest image tag: ${IMAGE_TAG}" \
              --base main \
              --head $NEW_BRANCH
          else
            echo "No changes detected in deployment file"
          fi
